<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    tools:context=".presentation.onboarding.WelcomeFragment">

    <!-- In this case, the fab button should be placed in a fixed position in
         the right bottom corner. The easiest way to achieve this is with the help of
         ConstraintLayout or RelativeLayout. But the possible better performance of
         RelativeLayout comparing to ConstraintLayout very questionable.
         -->
    <androidx.constraintlayout.widget.ConstraintLayout
        android:id="@+id/shoe_list_layout"
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <ScrollView
            android:layout_width="0dp"
            android:layout_height="0dp"
            android:layout_margin="@dimen/fragment_vertical_margin"
            android:contentDescription="@string/scrollview_for_shoe_items"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent">

            <!-- LinearLayout is the best choice for a list simulation,
                 each child view will be placed one after the other
                 -->
            <LinearLayout
                android:id="@+id/shoeContainer"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical" />
        </ScrollView>

        <com.google.android.material.floatingactionbutton.FloatingActionButton
            android:id="@+id/fabAddShoe"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginEnd="@dimen/fragment_horizontal_margin"
            android:layout_marginBottom="@dimen/fragment_vertical_margin"
            android:contentDescription="@string/add_shoe_item_description"
            android:src="@drawable/ic_add"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent" />
    </androidx.constraintlayout.widget.ConstraintLayout>
</layout>
